//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Reflection;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace ACMSE
{
	/// <summary>
	/// Database       : demobase1_20_3_7
	/// Data Source    : 172.19.10.166
	/// Server Version : 15.00.4261
	/// </summary>
	public partial class Demobase12037DB : LinqToDB.Data.DataConnection
	{
		public ITable<AccessZone>                                      AccessZones                             { get { return this.GetTable<AccessZone>(); } }
		public ITable<AcessPoint>                                      AcessPoints                             { get { return this.GetTable<AcessPoint>(); } }
		public ITable<PList>                                           PLists                                  { get { return this.GetTable<PList>(); } }
		public ITable<PLogData>                                        PLogData                                { get { return this.GetTable<PLogData>(); } }

		public Demobase12037DB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Demobase12037DB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Demobase12037DB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Demobase12037DB(DataOptions<Demobase12037DB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();

		#region Table Functions

		#region FnClientObjectTypeToDbType

		[Sql.TableFunction(Schema="abd", Name="fn_ClientObjectTypeToDbType")]
		public ITable<FnClientObjectTypeToDbTypeResult> FnClientObjectTypeToDbType(string @ClietnObjTypes, char? @Delimeter)
		{
			return this.GetTable<FnClientObjectTypeToDbTypeResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@ClietnObjTypes,
				@Delimeter);
		}

		public partial class FnClientObjectTypeToDbTypeResult
		{
			public string ClientType { get; set; }
			public int    GType      { get; set; }
		}

		#endregion

		#region FnParserStrToTable

		[Sql.TableFunction(Schema="abd", Name="fn_ParserStrToTable")]
		public ITable<FnParserStrToTableResult> FnParserStrToTable(string @inputStr, char? @delimeter)
		{
			return this.GetTable<FnParserStrToTableResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@inputStr,
				@delimeter);
		}

		public partial class FnParserStrToTableResult
		{
			public int    RowNum { get; set; }
			public string ID     { get; set; }
		}

		#endregion

		#region FnSelectCamerasTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectCamerasTreePlan")]
		public ITable<FnSelectCamerasTreePlanResult> FnSelectCamerasTreePlan(int? @idComp, int? @GType, bool? @isMap, int? @idObject, int? @idMap)
		{
			return this.GetTable<FnSelectCamerasTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@isMap,
				@idObject,
				@idMap);
		}

		public partial class FnSelectCamerasTreePlanResult
		{
			public int    ID           { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapElementID { get; set; }
			public string NameCamera   { get; set; }
			public int?   GIndex       { get; set; }
		}

		#endregion

		#region FnSelectDevicesForLines

		[Sql.TableFunction(Schema="abd", Name="fn_SelectDevicesForLines")]
		public ITable<FnSelectDevicesForLinesResult> FnSelectDevicesForLines(bool? @ShortName)
		{
			return this.GetTable<FnSelectDevicesForLinesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@ShortName);
		}

		public partial class FnSelectDevicesForLinesResult
		{
			public int    DeviceID          { get; set; }
			public int    DevType           { get; set; }
			public int    LineID            { get; set; }
			public int    GIndexLine        { get; set; }
			public int    CompID            { get; set; }
			public int    PKUID             { get; set; }
			public string DeviceTreeName    { get; set; }
			public string CompName          { get; set; }
			public string LineAddress       { get; set; }
			public string DeviceName        { get; set; }
			public string SortColumnByLevel { get; set; }
		}

		#endregion

		#region FnSelectDevicesTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectDevicesTreePlan")]
		public ITable<FnSelectDevicesTreePlanResult> FnSelectDevicesTreePlan(int? @idComp, int? @GType, bool? @isMap, int? @idObject)
		{
			return this.GetTable<FnSelectDevicesTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@isMap,
				@idObject);
		}

		public partial class FnSelectDevicesTreePlanResult
		{
			public int    PKUID        { get; set; }
			public int    GIndexLine   { get; set; }
			public int    ID           { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapElementID { get; set; }
			public string NameDevice   { get; set; }
		}

		#endregion

		#region FnSelectDoorsTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectDoorsTreePlan")]
		public ITable<FnSelectDoorsTreePlanResult> FnSelectDoorsTreePlan(int? @idComp, int? @GType, bool? @isMap)
		{
			return this.GetTable<FnSelectDoorsTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@isMap);
		}

		public partial class FnSelectDoorsTreePlanResult
		{
			public int    ID           { get; set; }
			public int    GIndex       { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapElementID { get; set; }
			public string NameDoor     { get; set; }
		}

		#endregion

		#region FnSelectGroupObjectsTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectGroupObjectsTreePlan")]
		public ITable<FnSelectGroupObjectsTreePlanResult> FnSelectGroupObjectsTreePlan(int? @idComp, int? @GType, int? @idMap, bool? @isMap)
		{
			return this.GetTable<FnSelectGroupObjectsTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@idMap,
				@isMap);
		}

		public partial class FnSelectGroupObjectsTreePlanResult
		{
			public int    ID           { get; set; }
			public int    GIndex       { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   GType        { get; set; }
			public int?   MapElementID { get; set; }
			public string NameGrObject { get; set; }
		}

		#endregion

		#region FnSelectLinkTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectLinkTreePlan")]
		public ITable<FnSelectLinkTreePlanResult> FnSelectLinkTreePlan(int? @idComp, int? @GType, int? @idMap, bool? @isMap)
		{
			return this.GetTable<FnSelectLinkTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@idMap,
				@isMap);
		}

		public partial class FnSelectLinkTreePlanResult
		{
			public int    ID           { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapElementID { get; set; }
			public string NameLinkPlan { get; set; }
		}

		#endregion

		#region FnSelectMapElements

		[Sql.TableFunction(Schema="abd", Name="fn_SelectMapElements")]
		public ITable<FnSelectMapElementsResult> FnSelectMapElements(int? @idMap, int? @idSection, string @GTypes, bool? @AllElements)
		{
			return this.GetTable<FnSelectMapElementsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idMap,
				@idSection,
				@GTypes,
				@AllElements);
		}

		public partial class FnSelectMapElementsResult
		{
			public int    ID              { get; set; }
			public int    MapID           { get; set; }
			public int    GType           { get; set; }
			public int    UnitID          { get; set; }
			public string UnitType        { get; set; }
			public int?   DeviceType      { get; set; }
			public int?   LineNo          { get; set; }
			public string MACAddress      { get; set; }
			public int?   DeviceInterface { get; set; }
			public int?   IdDevice        { get; set; }
			public string ItemUnitType    { get; set; }
			public string Text            { get; set; }
			public int?   ImageIndex      { get; set; }
			public int?   Data            { get; set; }
			public char?  D1              { get; set; }
			public int?   D2              { get; set; }
			public int    PictureCount    { get; set; }
		}

		#endregion

		#region FnSelectMapIndicatorsDefault

		[Sql.TableFunction(Schema="abd", Name="fn_SelectMapIndicatorsDefault")]
		public ITable<FnSelectMapIndicatorsDefaultResult> FnSelectMapIndicatorsDefault()
		{
			return this.GetTable<FnSelectMapIndicatorsDefaultResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class FnSelectMapIndicatorsDefaultResult
		{
			public int     ID_Indicator { get; set; }
			public decimal RangeMin     { get; set; }
			public decimal RangeMax     { get; set; }
			public int     RangeColor   { get; set; }
			public int     StatusRange  { get; set; }
		}

		#endregion

		#region FnSelectObjectsTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectObjectsTreePlan")]
		public ITable<FnSelectObjectsTreePlanResult> FnSelectObjectsTreePlan(int? @idComp, int? @GType, int? @idMap, bool? @isMap)
		{
			return this.GetTable<FnSelectObjectsTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@idMap,
				@isMap);
		}

		public partial class FnSelectObjectsTreePlanResult
		{
			public int    ID           { get; set; }
			public int    GIndex       { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapElementID { get; set; }
			public string NameObject   { get; set; }
		}

		#endregion

		#region FnSelectReadersTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectReadersTreePlan")]
		public ITable<FnSelectReadersTreePlanResult> FnSelectReadersTreePlan(int? @idComp, int? @GType, bool? @isMap, int? @idObject)
		{
			return this.GetTable<FnSelectReadersTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@isMap,
				@idObject);
		}

		public partial class FnSelectReadersTreePlanResult
		{
			public int    Address      { get; set; }
			public int    ID           { get; set; }
			public int?   MapID        { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapElementID { get; set; }
			public string NameReader   { get; set; }
		}

		#endregion

		#region FnSelectScenarios

		[Sql.TableFunction(Schema="abd", Name="fn_SelectScenarios")]
		public ITable<FnSelectScenariosResult> FnSelectScenarios()
		{
			return this.GetTable<FnSelectScenariosResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class FnSelectScenariosResult
		{
			public int    ID                { get; set; }
			public int?   ID_Parent         { get; set; }
			public int    ID_ScenariosTypes { get; set; }
			public int    ID_Device         { get; set; }
			public int    DeviceType        { get; set; }
			public int    ID_Level          { get; set; }
			public int?   Num               { get; set; }
			public string ScenName          { get; set; }
			public int    ImageIndex        { get; set; }
		}

		#endregion

		#region FnSelectScenariosDevicesName

		[Sql.TableFunction(Schema="abd", Name="fn_SelectScenariosDevicesName")]
		public ITable<FnSelectScenariosDevicesNameResult> FnSelectScenariosDevicesName(int? @DeviceType, bool? @isScenarios)
		{
			return this.GetTable<FnSelectScenariosDevicesNameResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@DeviceType,
				@isScenarios);
		}

		public partial class FnSelectScenariosDevicesNameResult
		{
			public int    ID         { get; set; }
			public int?   DeviceType { get; set; }
			public string NameDevice { get; set; }
			public int    CompNum    { get; set; }
			public int    ComPortNum { get; set; }
		}

		#endregion

		#region FnSelectSectionInputTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectSectionInputTreePlan")]
		public ITable<FnSelectSectionInputTreePlanResult> FnSelectSectionInputTreePlan(int? @idComp, int? @GType, bool? @isMap, int? @idObject)
		{
			return this.GetTable<FnSelectSectionInputTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@isMap,
				@idObject);
		}

		public partial class FnSelectSectionInputTreePlanResult
		{
			public int    ID           { get; set; }
			public int    GIndex       { get; set; }
			public int    PictureCount { get; set; }
			public string ElementName  { get; set; }
			public int    ObjectID     { get; set; }
			public int?   MapID        { get; set; }
			public int    Address      { get; set; }
		}

		#endregion

		#region FnSelectSectionOutputTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectSectionOutputTreePlan")]
		public ITable<FnSelectSectionOutputTreePlanResult> FnSelectSectionOutputTreePlan(int? @idComp, int? @GType, bool? @isMap, int? @idObject)
		{
			return this.GetTable<FnSelectSectionOutputTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idComp,
				@GType,
				@isMap,
				@idObject);
		}

		public partial class FnSelectSectionOutputTreePlanResult
		{
			public int    ID           { get; set; }
			public int    GIndex       { get; set; }
			public int    PictureCount { get; set; }
			public int?   MapID        { get; set; }
			public string ElementName  { get; set; }
			public int    ObjectID     { get; set; }
			public int    Address      { get; set; }
			public int?   MapElementID { get; set; }
		}

		#endregion

		#region FnSelectZoneIndicatorsTreePlan

		[Sql.TableFunction(Schema="abd", Name="fn_SelectZoneIndicatorsTreePlan")]
		public ITable<FnSelectZoneIndicatorsTreePlanResult> FnSelectZoneIndicatorsTreePlan(int? @idMap, int? @idObject)
		{
			return this.GetTable<FnSelectZoneIndicatorsTreePlanResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@idMap,
				@idObject);
		}

		public partial class FnSelectZoneIndicatorsTreePlanResult
		{
			public int?   ObjectID        { get; set; }
			public int    GType           { get; set; }
			public string ElementName     { get; set; }
			public string HintElementName { get; set; }
			public int?   MapID           { get; set; }
			public int?   PictureCount    { get; set; }
			public int?   MapElementID    { get; set; }
		}

		#endregion

		#region TfGetPasswordTypes

		[Sql.TableFunction(Schema="dbo", Name="tf_GetPasswordTypes")]
		public ITable<TfGetPasswordTypesResult> TfGetPasswordTypes()
		{
			return this.GetTable<TfGetPasswordTypesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class TfGetPasswordTypesResult
		{
			public int?   ID   { get; set; }
			public string Name { get; set; }
		}

		#endregion

		#region TfSplitString

		[Sql.TableFunction(Schema="dbo", Name="tf_SplitString")]
		public ITable<TfSplitStringResult> TfSplitString(string @String, char? @Delimiter)
		{
			return this.GetTable<TfSplitStringResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@String,
				@Delimiter);
		}

		public partial class TfSplitStringResult
		{
			public int?   RowNum { get; set; }
			public string Value  { get; set; }
		}

		#endregion

		#region TfSplitStringToInt

		[Sql.TableFunction(Schema="dbo", Name="tf_SplitStringToInt")]
		public ITable<TfSplitStringToIntResult> TfSplitStringToInt(string @String)
		{
			return this.GetTable<TfSplitStringToIntResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@String);
		}

		public partial class TfSplitStringToIntResult
		{
			public int? ID       { get; set; }
			public int? Included { get; set; }
			public int? RowNum   { get; set; }
		}

		#endregion

		#region TfSplitStringToIntEx

		[Sql.TableFunction(Schema="dbo", Name="tf_SplitStringToIntEx")]
		public ITable<TfSplitStringToIntExResult> TfSplitStringToIntEx(string @String)
		{
			return this.GetTable<TfSplitStringToIntExResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@String);
		}

		public partial class TfSplitStringToIntExResult
		{
			public int? ID     { get; set; }
			public int? RowNum { get; set; }
		}

		#endregion

		#region UsfGetUnusedPenalList

		[Sql.TableFunction(Schema="dbo", Name="usfGetUnusedPenalList")]
		public ITable<UsfGetUnusedPenalListResult> UsfGetUnusedPenalList(int? @PListID)
		{
			return this.GetTable<UsfGetUnusedPenalListResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@PListID);
		}

		public partial class UsfGetUnusedPenalListResult
		{
			[Column("accessID")] public int AccessID { get; set; }
		}

		#endregion

		#endregion
	}

	[Table(Schema="dbo", Name="AccessZone")]
	public partial class AccessZone
	{
		[PrimaryKey, NotNull    ] public int    ID          { get; set; } // int
		[Column,        Nullable] public string Name        { get; set; } // varchar(25)
		[Column,        Nullable] public string Comment     { get; set; } // varchar(200)
		[Column,     NotNull    ] public int    GIndex      { get; set; } // int
		[Column,        Nullable] public int?   Config      { get; set; } // int
		[Column,        Nullable] public int?   Status      { get; set; } // int
		[Column,        Nullable] public int?   OperatorID  { get; set; } // int
		[Column,        Nullable] public string Workstation { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="AcessPoint")]
	public partial class AcessPoint
	{
		[PrimaryKey, NotNull    ] public int    ID               { get; set; } // int
		[Column,     NotNull    ] public int    ComputerID       { get; set; } // int
		[Column,        Nullable] public string Name             { get; set; } // varchar(25)
		[Column,        Nullable] public string Comment          { get; set; } // varchar(255)
		[Column,     NotNull    ] public int    GIndex           { get; set; } // int
		[Column,     NotNull    ] public int    Gtype            { get; set; } // int
		[Column,        Nullable] public int?   InKeyID          { get; set; } // int
		[Column,        Nullable] public int?   InDuration       { get; set; } // int
		[Column,        Nullable] public int?   InCommand        { get; set; } // int
		[Column,        Nullable] public int?   OutKeyID         { get; set; } // int
		[Column,        Nullable] public int?   OutDuration      { get; set; } // int
		[Column,        Nullable] public int?   OutCommand       { get; set; } // int
		[Column,        Nullable] public int?   InKeyID2         { get; set; } // int
		[Column,        Nullable] public int?   InDuration2      { get; set; } // int
		[Column,        Nullable] public int?   InCommand2       { get; set; } // int
		[Column,        Nullable] public int?   OutKeyID2        { get; set; } // int
		[Column,        Nullable] public int?   OutDuration2     { get; set; } // int
		[Column,        Nullable] public int?   OutCommand2      { get; set; } // int
		[Column,        Nullable] public int?   Config           { get; set; } // int
		[Column,        Nullable] public int?   IndexZone1       { get; set; } // int
		[Column,        Nullable] public int?   IndexZone2       { get; set; } // int
		[Column,        Nullable] public int?   IndexZone3       { get; set; } // int
		[Column,        Nullable] public int?   IndexZone4       { get; set; } // int
		[Column,        Nullable] public int?   WorkTimeZone1    { get; set; } // int
		[Column,        Nullable] public int?   WorkTimeZone2    { get; set; } // int
		[Column,        Nullable] public int?   WorkTimeZone3    { get; set; } // int
		[Column,        Nullable] public int?   WorkTimeZone4    { get; set; } // int
		[Column,        Nullable] public int?   Mode             { get; set; } // int
		[Column,        Nullable] public int?   WeightTerminalID { get; set; } // int
		[Column,        Nullable] public int?   OperatorID       { get; set; } // int
		[Column,        Nullable] public string Workstation      { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="pList")]
	public partial class PList
	{
		[Column(),                 PrimaryKey,  NotNull] public int       ID                { get; set; } // int
		[Column(),                              NotNull] public string    Name              { get; set; } // varchar(25)
		[Column(),                              NotNull] public string    FirstName         { get; set; } // varchar(25)
		[Column(),                    Nullable         ] public string    MidName           { get; set; } // varchar(25)
		[Column(),                              NotNull] public int       Status            { get; set; } // int
		[Column(),                    Nullable         ] public string    WorkPhone         { get; set; } // varchar(25)
		[Column(),                    Nullable         ] public string    HomePhone         { get; set; } // varchar(25)
		[Column(),                    Nullable         ] public byte[]    Picture           { get; set; } // image
		[Column(),                    Nullable         ] public DateTime? BirthDate         { get; set; } // datetime
		[Column(),                    Nullable         ] public string    Address           { get; set; } // varchar(200)
		[Column(),                    Nullable         ] public int?      Company           { get; set; } // int
		[Column(),                    Nullable         ] public int?      Section           { get; set; } // int
		[Column(),                    Nullable         ] public int?      Post              { get; set; } // int
		[Column(),                    Nullable         ] public int?      Schedule          { get; set; } // int
		[Column(),                    Nullable         ] public string    Avto              { get; set; } // varchar(200)
		[Column(),                    Nullable         ] public int?      Spack             { get; set; } // int
		[Column(),                    Nullable         ] public int?      Config            { get; set; } // int
		[Column(),                    Nullable         ] public string    TabNumber         { get; set; } // varchar(50)
		[Column(),                    Nullable         ] public int?      GrStatus          { get; set; } // int
		[Column(),                    Nullable         ] public DateTime? ChangeTime        { get; set; } // datetime
		[Column(),                    Nullable         ] public int?      IndexForContactId { get; set; } // int
		[Column(),                    Nullable         ] public int?      StatusRecord      { get; set; } // int
		[Column("Patterns_ID"),       Nullable         ] public int?      PatternsId        { get; set; } // int
		[Column("ID_Number_List"),    Nullable         ] public string    IdNumberList      { get; set; } // varchar(50)
		[Column("weight"),            Nullable         ] public int?      Weight            { get; set; } // int
		[Column("delta_weight"),      Nullable         ] public int?      DeltaWeight       { get; set; } // int
		[Column(),                    Nullable         ] public int?      AutoID            { get; set; } // int
		[Column("GUID_1C"),           Nullable         ] public string    Guid1c            { get; set; } // varchar(40)
		[Column("status_list"),       Nullable         ] public int?      StatusList        { get; set; } // int
		[Column(),                    Nullable         ] public string    EmailList         { get; set; } // varchar(200)
		[Column("fielddelete"),       Nullable         ] public int?      Fielddelete       { get; set; } // int
		[Column(),                    Nullable         ] public int?      BlackList         { get; set; } // int
		[Column(),                    Nullable         ] public string    INN               { get; set; } // varchar(40)
		[Column(),                    Nullable         ] public string    ReasonToBlackList { get; set; } // varchar(200)
		[Column(),                    Nullable         ] public int?      TypeDocum         { get; set; } // int
		[Column(),                    Nullable         ] public int?      SexGuest          { get; set; } // int
		[Column(),                    Nullable         ] public string    DokumSeries       { get; set; } // varchar(50)
		[Column(),                    Nullable         ] public string    DokumNumber       { get; set; } // varchar(50)
		[Column(),                    Nullable         ] public DateTime? DateDocument      { get; set; } // datetime
		[Column(),                    Nullable         ] public string    KodPodr           { get; set; } // varchar(50)
		[Column(),                    Nullable         ] public string    Kem               { get; set; } // varchar(200)
		[Column(),                    Nullable         ] public DateTime? DateDocumentEnd   { get; set; } // datetime
		[Column("birthplace"),        Nullable         ] public string    Birthplace        { get; set; } // varchar(200)
		[Column(),                    Nullable         ] public DateTime? DateTimeInArchive { get; set; } // datetime
		[Column(),                    Nullable         ] public string    FireToList        { get; set; } // varchar(200)
		[Column(),                    Nullable         ] public int?      IDSCAN            { get; set; } // int
		[Column(),                    Nullable         ] public int?      IDGROUPEXIT       { get; set; } // int
		[Column(),                    Nullable         ] public int?      OperatorID        { get; set; } // int
		[Column(),                    Nullable         ] public string    Workstation       { get; set; } // varchar(50)
		[Column(),                    Nullable         ] public int?      RoomID            { get; set; } // int
	}

	[Table(Schema="dbo", Name="pLogData")]
	public partial class PLogData
	{
		[Column(),                          NotNull] public DateTime  TimeVal         { get; set; } // datetime
		[Column(),                Nullable         ] public int?      NumCom          { get; set; } // int
		[Column(),                Nullable         ] public int?      IDComp          { get; set; } // int
		[Column(),                Nullable         ] public int?      Par1            { get; set; } // int
		[Column(),                Nullable         ] public int?      Par2            { get; set; } // int
		[Column(),                Nullable         ] public int?      Par3            { get; set; } // int
		[Column(),                Nullable         ] public int?      Par4            { get; set; } // int
		[Column(),                          NotNull] public int       Event           { get; set; } // int
		[Column(),                Nullable         ] public int?      IndexKey        { get; set; } // int
		[Column(),                Nullable         ] public int?      RazdIndex       { get; set; } // int
		[Column(),                Nullable         ] public int?      HozOrgan        { get; set; } // int
		[Column(),                Nullable         ] public int?      HozGuest        { get; set; } // int
		[Column(),                Nullable         ] public string    Remark          { get; set; } // varchar(65)
		[Column(),                Nullable         ] public int?      DoorIndex       { get; set; } // int
		[Column(),                Nullable         ] public int?      Mode            { get; set; } // int
		[Column(),                Nullable         ] public DateTime? DeviceTime      { get; set; } // datetime
		[Column(),                Nullable         ] public int?      VEvent          { get; set; } // int
		[Column(),                Nullable         ] public int?      ZReserv         { get; set; } // int
		[Column(),                Nullable         ] public int?      ZoneIndex       { get; set; } // int
		[Column(),                Nullable         ] public int?      ReaderIndex     { get; set; } // int
		[Column(),                Nullable         ] public int?      Sign            { get; set; } // int
		[Column("tpRzdIndex"),    Nullable         ] public int?      TpRzdIndex      { get; set; } // int
		[Column("tpPar4"),        Nullable         ] public int?      TpPar4          { get; set; } // int
		[Column(),                Nullable         ] public int?      IndexZone       { get; set; } // int
		[Column("tpIndex"),       Nullable         ] public int?      TpIndex         { get; set; } // int
		[Column(),             PrimaryKey,  NotNull] public Guid      GUID            { get; set; } // uniqueidentifier
		[Column(),                Nullable         ] public int?      IdComment       { get; set; } // int
		[Column(),                Nullable         ] public int?      ExternalEventId { get; set; } // int
		[Column(),                Nullable         ] public string    StrAddr         { get; set; } // varchar(250)
	}

	public static partial class TableExtensions
	{
		public static AccessZone Find(this ITable<AccessZone> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static AcessPoint Find(this ITable<AcessPoint> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static PList Find(this ITable<PList> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static PLogData Find(this ITable<PLogData> table, Guid GUID)
		{
			return table.FirstOrDefault(t =>
				t.GUID == GUID);
		}
	}
}
